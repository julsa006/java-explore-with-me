CREATE TABLE IF NOT EXISTS users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS categories (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS events (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  annotation VARCHAR(2000) NOT NULL,
  category_id BIGINT NOT NULL,
  created_on TIMESTAMPTZ NOT NULL,
  description VARCHAR(7000) NOT NULL,
  event_date TIMESTAMPTZ NOT NULL,
  initiator_id BIGINT NOT NULL,
  location_lat REAL NOT NULL,
  location_lon REAL NOT NULL,
  paid BOOLEAN NOT NULL,
  participant_limit INTEGER NOT NULL,
  published_on TIMESTAMPTZ,
  request_moderation BOOLEAN NOT NULL,
  state VARCHAR(50) NOT NULL,
  title VARCHAR(120) NOT NULL,
  CONSTRAINT fk_event_initiator FOREIGN KEY (initiator_id) REFERENCES users(id),
  CONSTRAINT fk_event_category FOREIGN KEY (category_id) REFERENCES categories(id) ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS compilations (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  title VARCHAR(50) NOT NULL UNIQUE,
  pinned BOOLEAN NOT NULL
);


CREATE TABLE IF NOT EXISTS compilations_events
(
    compilation_id  BIGINT NOT NULL REFERENCES compilations (id),
    event_id BIGINT NOT NULL REFERENCES events (id),
    PRIMARY KEY (compilation_id, event_id)
);

CREATE TABLE IF NOT EXISTS requests (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  event_id BIGINT NOT NULL,
  created TIMESTAMPTZ NOT NULL,
  requester_id BIGINT NOT NULL,
  status VARCHAR(50) NOT NULL,
  CONSTRAINT fk_request_requester FOREIGN KEY (requester_id) REFERENCES users(id),
  CONSTRAINT fk_request_event FOREIGN KEY (event_id) REFERENCES events(id)
);

CREATE TABLE IF NOT EXISTS comments (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  event_id BIGINT NOT NULL,
  user_id BIGINT NOT NULL,
  created TIMESTAMPTZ NOT NULL,
  text VARCHAR(2000) NOT NULL,
  hidden BOOLEAN NOT NULL,
  edited TIMESTAMPTZ,
  CONSTRAINT fk_request_requester FOREIGN KEY (user_id) REFERENCES users(id),
  CONSTRAINT fk_request_event FOREIGN KEY (event_id) REFERENCES events(id)
);



